name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build Docker images
        run: |
          TARGET=prod make build
          TARGET=dev make build

      - name: Save Docker images
        run: |
          mkdir -p docker-image-prod docker-image-dev
          docker save -o docker-image-prod/article-store.tar libero/article-store:${IMAGE_TAG}
          gzip docker-image-prod/article-store.tar
          docker save -o docker-image-dev/article-store.tar libero/article-store:${IMAGE_TAG}-dev
          gzip docker-image-dev/article-store.tar

      - name: Upload prod Docker image
        uses: actions/upload-artifact@v1
        with:
          name: docker-image-prod
          path: docker-image-prod

      - name: Upload dev Docker image
        uses: actions/upload-artifact@v1
        with:
          name: docker-image-dev
          path: docker-image-dev

  test:

    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test:
          - make lint
          - make test
          - TARGET=dev .github/smoke-test.sh
          - TARGET=prod .github/smoke-test.sh
          - .github/analyse.sh
          - .github/hypertest.sh
        include:
          - target: prod
            test: TARGET=prod .github/smoke-test.sh

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Download Docker image artifact
        uses: actions/download-artifact@v1
        with:
          name: docker-image-${{ matrix.target || 'dev' }}

      - name: Load Docker image
        run: |
          gunzip docker-image-${{ matrix.target || 'dev' }}/article-store.tar.gz
          docker load -i docker-image-${{ matrix.target || 'dev' }}/article-store.tar

      - name: Run test
        run: ${{ matrix.test }}

  push:

    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Download Docker image artifact
        uses: actions/download-artifact@v1
        with:
          name: docker-image-prod

      - name: Load Docker image
        run: |
          gunzip docker-image-prod/article-store.tar.gz
          docker load -i docker-image-prod/article-store.tar

      - name: Push Docker image
        run: .scripts/github/push-image.sh article-store
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
